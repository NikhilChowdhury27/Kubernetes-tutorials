# Fluentd ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: elastic-stack
data:
   fluent.conf: |
    # Input Section
    <source>
      @type tail
      path /var/log/containers/*.log
      exclude_path ["/var/log/containers/*fluentd*.log"]
      pos_file /fluentd/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </source>

    # Enrich logs with Kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    # Exclude logs from system namespaces
    <filter kubernetes.**>
      @type grep
      <exclude>
        key $.kubernetes.namespace_name
        pattern ^(kube-system|kube-public|default)$
      </exclude>
    </filter>

    # Output Section
    <match **>
      @type elasticsearch
      @id elasticsearch
      host elasticsearch.elastic-stack.svc.cluster.local
      port 9200
      scheme http
      logstash_format true
      logstash_prefix fluentd
      logstash_dateformat %Y.%m.%d
      include_tag_key true
      type_name _doc
      flush_interval 1s
    </match>
---
# Fluentd ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-sa
  namespace: elastic-stack
---
# Fluentd ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd-role
rules:
- apiGroups: [""]
  resources:
    - namespaces
    - pods
  verbs:
    - get
    - list
    - watch
---
# Fluentd ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd-rolebinding
subjects:
- kind: ServiceAccount
  name: fluentd-sa
  namespace: elastic-stack
roleRef:
  kind: ClusterRole
  name: fluentd-role
  apiGroup: rbac.authorization.k8s.io
---
# Fluentd DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: elastic-stack
  labels:
    app: fluentd
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccountName: fluentd-sa
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      securityContext:
        fsGroup: 0
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-elasticsearch7-1.0
        env:
        - name: FLUENT_ELASTICSEARCH_HOST
          value: "elasticsearch.elastic-stack.svc.cluster.local"
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        resources:
          limits:
            cpu: "500m"
            memory: "500Mi"
          requests:
            cpu: "100m"
            memory: "200Mi"
        volumeMounts:
        - name: config-volume
          mountPath: /fluentd/etc
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: fluentd-pos
          mountPath: /fluentd/log
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config-volume
        configMap:
          name: fluentd-config
      - name: varlog
        hostPath:
          path: /var/log
          type: Directory
      - name: fluentd-pos
        emptyDir: {}
